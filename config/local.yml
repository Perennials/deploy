credentials:
  github:
    Perennials:
      token: xxxxxxxxxxx
      username: perennials-bot
      password: xxxxxxxxxx

vars:
  env: dev

projects:

  ####
  docker:
    #repo:
    #  remote: github/Perennials/docker
    #  local: {project.local}

    #docker: !iffile '!{project.local}/deploy.yml'

    docker:
      - image: docker.perennial.int/supplier2
        path: git@github.com:Perennials/docker#:/supplier2
      - image: docker.perennial.int/php:5.4
        path: git@github.com:Perennials/docker#:/php54
      - image: docker.perennial.int/nginx2
        path: git@github.com:Perennials/docker#:/nginx2

    vars:
      local: /apps/docker

  ####
  bonotel:
    extends: supplier  

  ####
  ws2:
    branches: [ 'master', !!js/regexp '^\d+\.\d+$' ]
    repo:
      remote: github/Perennials/providersdk-ws
      local: /apps/{project}/{branch}

    docker:
      image: 'docker.perennial.int/{project}:{branch.tag}'
      file: '{project.local}/docker'

  ####
  supplier:
    template: true

    vars:
      local: /apps/supplier/{project}/{branch}

    ################### this should go in include only for dev
    #include: !iffile config/{project}.{env}.yml
    repo:
      remote: github/Perennials/supplier-{project}
      local: '{project.local}'
      vars:
        sdk-version: !!js/function >
          function ( global, require, vars ) {
            try {
              return require( 'fs' )
                .readFileSync( vars.render( '{project.local}/supplier.php' ), 'utf8' )
                .match( /providerkit-php\/([^\/]+)\/init.php/ )[ 1 ];
            }
            catch ( e ) {
              // global.console.error( e );
              // global.console.log( vars )
              return 'master';
            }
          }
      submodules:
        github/Perennials/providerkit-php#{repo.sdk-version}: '{project.local}/lib/providerkit-php'

    docker:
      image: 'docker.perennial.int/{project}:{branch.tag}'
      path: '{project.local}'
    ###################

    rocker-compose:
      file: '{project.local}/docker'
      vars:
        env: '{env}'
        name: '{project}'
        version: '{branch}'

    