Unitest( 'Unitest.testeq() deep', function ( test ) {
	test( test.eq._cmpDeep( { a: 1, b: 2 }, { b: 2, a: 1 }, CMP_DEEP ) );
	test( !test.eq._cmpDeep( { a: 1, b: 2 }, { b: 2, a: 1, c: 3 }, CMP_DEEP ) );
	test( test.eq._cmpDeep( { a: 1, b: 2 }, { b: 2, a: 1, c: 3 }, CMP_DEEP|CMP_EXTENDS ) );
	test( !test.eq._cmpDeep( { a: 1, b: 2, c: 3 }, { b: 2, a: 1 }, CMP_DEEP|CMP_EXTENDS ) );
	test( test.eq._cmpDeep( [ 1, 2 ], [ 1, 2 ], CMP_DEEP ) );
	test( !test.eq._cmpDeep( [ 1, 2 ], [ 2, 1 ], CMP_DEEP ) );
	test( test.eq._cmpDeep(
		[ { a: 1, b: { b: 2, a: [ 1, 2 ] } }, [ { b: 2, a: 1 } ] ],
		[ { a: 1, b: { b: 2, a: [ 1, 2 ] } }, [ { b: 2, a: 1 } ] ], CMP_DEEP
	) );
	test( !test.eq._cmpDeep(
		[ { a: 1, b: { b: 2, a: [ 1, 2 ] } }, [ { b: 2, a: 1 } ] ],
		[ { a: 1, b: { b: 2, a: [ 1, 1 ] } }, [ { b: 2, a: 1 } ] ], CMP_DEEP
	) );
	test( !test.eq._cmpDeep(
		[ { a: 1, b: { b: 2, a: [ 1, 2 ] } }, [ { b: 2, a: 2 } ] ],
		[ { a: 1, b: { b: 2, a: [ 1, 2 ] } }, [ { b: 2, a: 1 } ] ], CMP_DEEP
	) );
} );

UnitestA( 'UnitestA()', function ( test ) {
	setTimeout( function () {
		test( true );
		test.eq( { a: 1, b: 2 }, { b: 2, a: 1 } );
		test.eq( { a: 1, b: '2' }, { b: 2, a: 1, c: 3 }, CMP_EXTENDS );
		test.eq( { a: 1, b: 2 }, { b: 2, a: 1, c: 3 }, CMP_STRICT|CMP_EXTENDS );
		test( !test.eq._cmpDeep( { a: 1, b: '2' }, { b: 2, a: 1, c: 3 }, CMP_STRICT|CMP_EXTENDS|CMP_DEEP ) );
		test.out();
	}, 1 );
} );


var count = 0;
UnitestA( 'AsyncOrder1', function ( test ) { 
	++count;
	setTimeout( function () {
		test( count === 1 );
		test.out();
	}, 100 );
} );

UnitestA( 'AsyncOrder2', function ( test ) { 
	++count;
	test( count === 2 );
	test.out();
} );

Unitest( 'SyncOrder3', function ( test ) { 
	++count;
	test( count === 3 );
} );

UnitestA( 'AsyncOrder4', function ( test ) { 
	++count;
	test( count === 4 );
	test.out();
} );

Unitest( 'SyncOrder5', function ( test ) { 
	++count;
	test( count === 5 );
} );